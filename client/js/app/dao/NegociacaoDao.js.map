{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","request","transaction","objectStore","add","onsuccess","onerror","Error","Promise","resolve","reject","cursor","openCursor","negociacoes","atual","e","target","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","console","error","clear","log"],"mappings":";;;;;;IAAMA,a;AAEF,2BAAYC,UAAZ,EAAwB;AAAA;;AACpB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;uCAEcC,U,EAAY;;AAEvB,gBAAIC,UAAU,KAAKH,WAAL,CACTI,WADS,CACG,CAAC,KAAKH,MAAN,CADH,EACkB,WADlB,EAETI,WAFS,CAEG,KAAKJ,MAFR,EAGTK,GAHS,CAGLJ,UAHK,CAAd;;AAMAC,oBAAQI,SAAR,GAAoB,YAAM;AACtB;AACH,aAFD;;AAIAJ,oBAAQK,OAAR,GAAkB,aAAK;AACnB,sBAAM,IAAIC,KAAJ,CAAU,yCAAV,CAAN;AACH,aAFD;AAGH;;;qCAEW;AAAA;;AACR,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,SAAS,MAAKb,WAAL,CACZI,WADY,CACA,CAAC,MAAKH,MAAN,CADA,EACe,WADf,EAEZI,WAFY,CAEA,MAAKJ,MAFL,EAGZa,UAHY,EAAb;;AAKA,oBAAIC,cAAc,EAAlB;;AAEAF,uBAAON,SAAP,GAAmB,aAAK;AACpB,wBAAIS,QAAQC,EAAEC,MAAF,CAASC,MAArB;;AAEA,wBAAGH,KAAH,EAAU;AACN,4BAAII,OAAOJ,MAAMK,KAAjB;;AAEAN,oCAAYO,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;;AAEAV,8BAAMW,QAAN;AACH,qBAND,MAMO;AACHhB,gCAAQI,WAAR;AACH;AACJ,iBAZD;;AAcAF,uBAAOL,OAAP,GAAiB,aAAK;AAClBoB,4BAAQC,KAAR,CAAcZ,EAAEC,MAAF,CAASW,KAAvB;AACAjB,2BAAO,wCAAP;AACH,iBAHD;AAIH,aA1BM,CAAP;AA2BH;;;qCAEY;AAAA;;AAET,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIT,UAAU,OAAKH,WAAL,CACTI,WADS,CACG,CAAC,OAAKH,MAAN,CADH,EACkB,WADlB,EAETI,WAFS,CAEG,OAAKJ,MAFR,EAGT6B,KAHS,EAAd;;AAKA3B,wBAAQI,SAAR,GAAoB;AAAA,2BAAKI,QAAQ,mCAAR,CAAL;AAAA,iBAApB;;AAEAR,wBAAQK,OAAR,GAAkB,aAAK;AACrBoB,4BAAQG,GAAR,CAAYd,EAAEC,MAAF,CAASW,KAArB;AACAjB,2BAAO,yCAAP;AACD,iBAHD;AAID,aAbI,CAAP;AAcH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\r\n\r\n    constructor(connection) {\r\n        this._connection = connection\r\n        this._store = 'negociacoes'\r\n    }\r\n\r\n    async adiciona(negociacao) {\r\n        \r\n        let request = this._connection\r\n            .transaction([this._store], 'readwrite')\r\n            .objectStore(this._store)\r\n            .add(negociacao)\r\n\r\n\r\n        request.onsuccess = () => {\r\n            return\r\n        }\r\n\r\n        request.onerror = e => {\r\n            throw new Error('Não foi possível adicionar a negociação')\r\n        }          \r\n    }\r\n    \r\n    listaTodos(){\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._connection\r\n            .transaction([this._store], 'readwrite')\r\n            .objectStore(this._store)\r\n            .openCursor();\r\n\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = e => {\r\n                let atual = e.target.result;\r\n\r\n                if(atual) {\r\n                    let dado = atual.value;\r\n\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor))\r\n                    \r\n                    atual.continue();\r\n                } else {\r\n                    resolve(negociacoes);\r\n                }\r\n            }\r\n\r\n            cursor.onerror = e => {\r\n                console.error(e.target.error)\r\n                reject('Não foi possível listar as negociações')\r\n            }\r\n        })\r\n    }\r\n\r\n    apagaTodos() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n    \r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n    \r\n            request.onsuccess = e => resolve('Negociações removidas com sucesso');\r\n    \r\n            request.onerror = e => {\r\n              console.log(e.target.error);\r\n              reject('Não foi possível remover as negociações');\r\n            }\r\n          });\r\n    }\r\n}"]}